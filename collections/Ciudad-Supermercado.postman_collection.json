{
	"info": {
		"_postman_id": "e17b1a68-9f54-4872-9b4d-7c1392446ecd",
		"name": "Ciudad-Supermercado",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23269245"
	},
	"item": [
		{
			"name": "Crear ciudad",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()\r",
							"pm.globals.set(\"ciudad_id\", data.id);\r",
							"\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"   pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"nombre\": \"Quito\",\r\n    \"pais\": \"Ecuador\",\r\n    \"habitantes\": 2872351\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/cities",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"cities"
					]
				}
			},
			"response": []
		},
		{
			"name": "Crear supermercados 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()\r",
							"pm.globals.set(\"super_id\", data.id);\r",
							"\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"   pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"nombre\": \"Supermercado 1\",\r\n    \"latitud\": 38.9047,\r\n    \"longitud\": -77.0163,\r\n    \"web\": \"http://link.com\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/supermarkets",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"supermarkets"
					]
				}
			},
			"response": []
		},
		{
			"name": "Crear supermercados 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()\r",
							"pm.globals.set(\"super_id2\", data.id);\r",
							"\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"   pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"nombre\": \"Supermercado 1\",\r\n    \"latitud\": 38.9047,\r\n    \"longitud\": -77.0163,\r\n    \"web\": \"http://link.com\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/supermarkets",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"supermarkets"
					]
				}
			},
			"response": []
		},
		{
			"name": "Agregar un supermercado a una ciudad",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"   pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{base_url}}/cities/{{ciudad_id}}/supermarkets/{{super_id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"cities",
						"{{ciudad_id}}",
						"supermarkets",
						"{{super_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Agregar un supermercado que no existe a una ciudad",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"El supermercado con el id no fue encontrado\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{base_url}}/cities/{{ciudad_id}}/supermarkets/00000000-0000-0000-0000-000000000000",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"cities",
						"{{ciudad_id}}",
						"supermarkets",
						"00000000-0000-0000-0000-000000000000"
					]
				}
			},
			"response": []
		},
		{
			"name": "Obtener todos los supermercados de una ciudad",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/cities/{{ciudad_id}}/supermarkets",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"cities",
						"{{ciudad_id}}",
						"supermarkets"
					]
				}
			},
			"response": []
		},
		{
			"name": "Obtener un supermercado de una ciudad",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/cities/{{ciudad_id}}/supermarkets/{{super_id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"cities",
						"{{ciudad_id}}",
						"supermarkets",
						"{{super_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Obtener un supermercado que no está asociado a una ciudad",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 412\", function () {\r",
							"   pm.response.to.have.status(412);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"El supermercado con el id no está asociado a la ciudad\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/cities/{{ciudad_id}}/supermarkets/{{super_id2}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"cities",
						"{{ciudad_id}}",
						"supermarkets",
						"{{super_id2}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Actualizar supermercados de una ciudad",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\r\n    {\r\n        \"id\":\"{{super_id2}}\"\r\n    }\r\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/cities/{{ciudad_id}}/supermarkets",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"cities",
						"{{ciudad_id}}",
						"supermarkets"
					]
				}
			},
			"response": []
		},
		{
			"name": "Actualizar supermercados que no existen de una ciudad",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"El supermercado con el id no fue encontrado\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\r\n    {\r\n        \"id\":\"00000000-0000-0000-0000-000000000000\"\r\n    }\r\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/cities/{{ciudad_id}}/supermarkets",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"cities",
						"{{ciudad_id}}",
						"supermarkets"
					]
				}
			},
			"response": []
		},
		{
			"name": "Eliminar un supermercado de una ciudad",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"   pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{base_url}}/cities/{{ciudad_id}}/supermarkets/{{super_id2}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"cities",
						"{{ciudad_id}}",
						"supermarkets",
						"{{super_id2}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Eliminar un supermercado no asociado a una ciudad",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 412\", function () {\r",
							"   pm.response.to.have.status(412);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"El supermercado con el id no está asociado a la ciudad\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{base_url}}/cities/{{ciudad_id}}/supermarkets/{{super_id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"cities",
						"{{ciudad_id}}",
						"supermarkets",
						"{{super_id}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "localhost:3000/api/v1",
			"type": "string"
		}
	]
}